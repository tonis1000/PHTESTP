name: Update Proxy & Player Map

on:
  schedule:
    - cron: '*/15 * * * *'  # ŒöŒ¨Œ∏Œµ 15 ŒªŒµœÄœÑŒ¨
  workflow_dispatch:

jobs:
  update-map:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install axios

      - name: Update streamPerfMap.json
        run: |
          node <<EOF
          const fs = require('fs');
          const axios = require('axios');

          const mainFile = 'streamPerfMap.json';
          const tempFile = 'streamPerfMap.temp.json';

          const proxyList = [
            '',
            'https://cors-anywhere-production-d9b6.up.railway.app/',
            'https://tonis-proxy.onrender.com/',
            'https://thingproxy.freeboard.io/fetch/',
            'https://corsproxy.io/?url=',
            'https://api.allorigins.win/raw?url='
          ];

          function encodeURL(url, proxy) {
            return proxy.endsWith('=') ? proxy + encodeURIComponent(url) : proxy + url;
          }

          const oldMap = fs.existsSync(mainFile) ? JSON.parse(fs.readFileSync(mainFile, 'utf-8')) : {};
          const tempMap = fs.existsSync(tempFile) ? JSON.parse(fs.readFileSync(tempFile, 'utf-8')) : {};

          let updated = false;

          (async () => {
            for (const [url, info] of Object.entries(tempMap)) {
              if (!oldMap[url]) {
                console.log('üîç Checking new URL:', url);

                // Œ†œÅŒøœÉœÄŒ±Œ∏ŒµŒØ ŒΩŒ± Œ≤œÅŒµŒπ ŒªŒµŒπœÑŒøœÖœÅŒ≥ŒπŒ∫œå proxy
                let foundProxy = '';
                for (const proxy of proxyList) {
                  const testUrl = encodeURL(url, proxy);
                  try {
                    const res = await axios.head(testUrl);
                    if (res.status >= 200 && res.status < 400) {
                      foundProxy = proxy;
                      break;
                    }
                  } catch (err) {
                    // continue
                  }
                }

                if (!foundProxy && info.proxy) {
                  foundProxy = info.proxy;
                }

                oldMap[url] = {
                  proxy: foundProxy,
                  player: info.player || 'unknown'
                };
                updated = true;
              }
            }

            if (updated) {
              fs.writeFileSync(mainFile, JSON.stringify(oldMap, null, 2));
              console.log('‚úÖ Updated streamPerfMap.json');
            } else {
              console.log('‚ÑπÔ∏è No new entries to update.');
            }
          })()
          .then(() => {})
          .catch(err => {
            console.error('‚ùå Error:', err);
            process.exit(1);
          });
          EOF

      - name: Commit and push changes
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add streamPerfMap.json
          git diff --cached --quiet || git commit -m "Update streamPerfMap.json"
          git push
